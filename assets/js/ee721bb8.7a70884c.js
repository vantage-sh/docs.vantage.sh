"use strict";(self.webpackChunkdocs_vantage_sh=self.webpackChunkdocs_vantage_sh||[]).push([[5646],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>m});var n=r(7294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var i=n.createContext({}),u=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,a=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=u(r),k=l,m=c["".concat(i,".").concat(k)]||c[k]||p[k]||a;return r?n.createElement(m,o(o({ref:t},d),{},{components:r})):n.createElement(m,o({ref:t},d))}));function m(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=r.length,o=new Array(a);o[0]=k;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[c]="string"==typeof e?e:l,o[1]=s;for(var u=2;u<a;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}k.displayName="MDXCreateElement"},5162:(e,t,r)=>{r.d(t,{Z:()=>o});var n=r(7294),l=r(6010);const a={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:r,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,l.Z)(a.tabItem,o),hidden:r},t)}},4866:(e,t,r)=>{r.d(t,{Z:()=>_});var n=r(7462),l=r(7294),a=r(6010),o=r(2466),s=r(6550),i=r(1980),u=r(7392),d=r(12);function c(e){return function(e){return l.Children.map(e,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:r,attributes:n,default:l}}=e;return{value:t,label:r,attributes:n,default:l}}))}function p(e){const{values:t,children:r}=e;return(0,l.useMemo)((()=>{const e=t??c(r);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function k(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:r}=e;const n=(0,s.k6)(),a=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,i._X)(a),(0,l.useCallback)((e=>{if(!a)return;const t=new URLSearchParams(n.location.search);t.set(a,e),n.replace({...n.location,search:t.toString()})}),[a,n])]}function w(e){const{defaultValue:t,queryString:r=!1,groupId:n}=e,a=p(e),[o,s]=(0,l.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!k({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=r.find((e=>e.default))??r[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:a}))),[i,u]=m({queryString:r,groupId:n}),[c,w]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,a]=(0,d.Nk)(r);return[n,(0,l.useCallback)((e=>{r&&a.set(e)}),[r,a])]}({groupId:n}),f=(()=>{const e=i??c;return k({value:e,tabValues:a})?e:null})();(0,l.useLayoutEffect)((()=>{f&&s(f)}),[f]);return{selectedValue:o,selectValue:(0,l.useCallback)((e=>{if(!k({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);s(e),u(e),w(e)}),[u,w,a]),tabValues:a}}var f=r(2389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function N(e){let{className:t,block:r,selectedValue:s,selectValue:i,tabValues:u}=e;const d=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.o5)(),p=e=>{const t=e.currentTarget,r=d.indexOf(t),n=u[r].value;n!==s&&(c(t),i(n))},k=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const r=d.indexOf(e.currentTarget)+1;t=d[r]??d[0];break}case"ArrowLeft":{const r=d.indexOf(e.currentTarget)-1;t=d[r]??d[d.length-1];break}}t?.focus()};return l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":r},t)},u.map((e=>{let{value:t,label:r,attributes:o}=e;return l.createElement("li",(0,n.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>d.push(e),onKeyDown:k,onClick:p},o,{className:(0,a.Z)("tabs__item",g.tabItem,o?.className,{"tabs__item--active":s===t})}),r??t)})))}function h(e){let{lazy:t,children:r,selectedValue:n}=e;if(r=Array.isArray(r)?r:[r],t){const e=r.find((e=>e.props.value===n));return e?(0,l.cloneElement)(e,{className:"margin-top--md"}):null}return l.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function b(e){const t=w(e);return l.createElement("div",{className:(0,a.Z)("tabs-container",g.tabList)},l.createElement(N,(0,n.Z)({},e,t)),l.createElement(h,(0,n.Z)({},e,t)))}function _(e){const t=(0,f.Z)();return l.createElement(b,(0,n.Z)({key:String(t)},e))}},382:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var n=r(7462),l=(r(7294),r(3905));r(4866),r(5162);const a={id:"vql_network_flow_report",title:"VQL for Network Flow Reports",description:"This page walks through the Vantage Query Language, or VQL, for use in Network Flow Reports.",keywords:["VQL","Vantage Query Language","Terraform"]},o="VQL for Network Flow Reports",s={unversionedId:"vql_network_flow_report",id:"vql_network_flow_report",title:"VQL for Network Flow Reports",description:"This page walks through the Vantage Query Language, or VQL, for use in Network Flow Reports.",source:"@site/docs/vql_network_flow_report.md",sourceDirName:".",slug:"/vql_network_flow_report",permalink:"/vql_network_flow_report",draft:!1,editUrl:"https://github.com/vantage-sh/docs.vantage.sh/blob/master/docs/vql_network_flow_report.md",tags:[],version:"current",frontMatter:{id:"vql_network_flow_report",title:"VQL for Network Flow Reports",description:"This page walks through the Vantage Query Language, or VQL, for use in Network Flow Reports.",keywords:["VQL","Vantage Query Language","Terraform"]},sidebar:"someSidebar",previous:{title:"VQL for Financial Commitment Reports",permalink:"/vql_financial_commitment_report"},next:{title:"Data Dictionary (Cost Reports)",permalink:"/data_dictionary"}},i={},u=[{value:"Network Flow Reports VQL Schema",id:"network-flow-reports-vql-schema",level:2},{value:"Keywords",id:"keywords",level:3},{value:"VQL Examples",id:"examples",level:2},{value:"Network Flows by Account ID",id:"account",level:3},{value:"Network Flows by Availability Zone ID",id:"az",level:3},{value:"Network Flows by Destination Address",id:"dstaddr",level:3},{value:"Network Flows by Destination Hostname",id:"dsthostname",level:3},{value:"Network Flows by Interface ID",id:"interface-id",level:3},{value:"Network Flows by Instance ID",id:"instance-id",level:3},{value:"Network Flows by Peer Resource UUID",id:"peer-resource-uuid",level:3},{value:"Network Flows by Peer Account ID",id:"peer-account-id",level:3},{value:"Network Flows by Peer VPC ID",id:"peer-vpc-id",level:3},{value:"Network Flows by Peer Regions",id:"peer-regions",level:3},{value:"Network Flows by Peer AZ ID",id:"peer-az-id",level:3},{value:"Network Flows by Peer Subnet ID",id:"peer-subnet-id",level:3},{value:"Network Flows by Peer Interface ID",id:"peer-interface-id",level:3},{value:"Network Flows by Peer Instance ID",id:"peer-instance-id",level:3},{value:"Network Flows by Region",id:"region",level:3},{value:"Network Flows by Resource UUID",id:"resource-uuid",level:3},{value:"Network Flows by Source Address",id:"srcaddr",level:3},{value:"Network Flows by Source Hostname",id:"srchostname",level:3},{value:"Network Flows by Subnet ID",id:"subnet-id",level:3},{value:"Network Flows by Traffic Category",id:"traffic-category",level:3},{value:"Network Flows by Traffic Path",id:"traffic-path",level:3},{value:"Network Flows by VPC ID",id:"vpc-id",level:3},{value:"Multiple Filters",id:"multiple-filters",level:3}],d={toc:u},c="wrapper";function p(e){let{components:t,...r}=e;return(0,l.kt)(c,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"vql-for-network-flow-reports"},"VQL for Network Flow Reports"),(0,l.kt)("p",null,"This page describes how to use VQL when querying Network Flow Reports in the API or using the Terraform Provider."),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"If you need help constructing a VQL query, navigate to the ",(0,l.kt)("a",{parentName:"p",href:"https://console.vantage.sh/network_flow_log_reports"},(0,l.kt)("strong",{parentName:"a"},"Network Flow Reports"))," page and click ",(0,l.kt)("strong",{parentName:"p"},"New Network Flow Report"),". From the top left, open the ",(0,l.kt)("strong",{parentName:"p"},"Filters")," menu. Create a filter and click the ",(0,l.kt)("strong",{parentName:"p"},"View as VQL")," button at the top of the ",(0,l.kt)("strong",{parentName:"p"},"Filters")," menu to see a filter's VQL representation. You can copy this syntax to use within your API calls.")),(0,l.kt)("h2",{id:"network-flow-reports-vql-schema"},"Network Flow Reports VQL Schema"),(0,l.kt)("p",null,"VQL for Network Flow Reports comprises one namespace, ",(0,l.kt)("inlineCode",{parentName:"p"},"network_flow_logs"),", which represents the available ",(0,l.kt)("a",{parentName:"p",href:"/network_flow_reports/#filter-and-group-a-network-flow-report"},"filters")," on Network Flow Reports in the Vantage console. To reference a filter, use the following syntax: ",(0,l.kt)("inlineCode",{parentName:"p"},"namespace.field")," (e.g., ",(0,l.kt)("inlineCode",{parentName:"p"},"network_flow_logs.account_id"),"). The following fields are available within the ",(0,l.kt)("inlineCode",{parentName:"p"},"network_flow_logs")," namespace."),(0,l.kt)("table",{style:{width:"100%"}},(0,l.kt)("thead",null,(0,l.kt)("tr",null,(0,l.kt)("th",null,"Namespace"),(0,l.kt)("th",null,"Field"),(0,l.kt)("th",null,"VQL Example"))),(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("td",{rowspan:"26"},(0,l.kt)("code",null,"network_flow_logs")),(0,l.kt)("td",null,(0,l.kt)("code",null,"account_id")),(0,l.kt)("td",null,(0,l.kt)("a",{href:"#account"},"Account ID example"))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"az_id")),(0,l.kt)("td",null,(0,l.kt)("a",{href:"#az"},"Availability Zone ID example"))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"dstaddr")),(0,l.kt)("td",null,(0,l.kt)("a",{href:"#dstaddr"},"Destination Address example"))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"dsthostname")),(0,l.kt)("td",null,(0,l.kt)("a",{href:"#dsthostname"},"Destination Hostname example"))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"interface_id")),(0,l.kt)("td",null,(0,l.kt)("a",{href:"#interface-id"},"Interface ID example"))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"instance_id")),(0,l.kt)("td",null,(0,l.kt)("a",{href:"#instance-id"},"Instance ID example"))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"peer_resource_uuid")),(0,l.kt)("td",null,(0,l.kt)("a",{href:"#peer-resource-uuid"},"Peer Resource UUID example"))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"peer_account_id")),(0,l.kt)("td",null,(0,l.kt)("a",{href:"#peer-account-id"},"Peer Account ID example"))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"peer_vpc_id")),(0,l.kt)("td",null,(0,l.kt)("a",{href:"#peer-vpc-id"},"Peer VPC ID example"))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"peer_regions")),(0,l.kt)("td",null,(0,l.kt)("a",{href:"#peer-regions"},"Peer Regions example"))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"peer_az_id")),(0,l.kt)("td",null,(0,l.kt)("a",{href:"#peer-az-id"},"Peer AZ ID example"))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"peer_subnet_id")),(0,l.kt)("td",null,(0,l.kt)("a",{href:"#peer-subnet-id"},"Peer Subnet ID example"))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"peer_interface_id")),(0,l.kt)("td",null,(0,l.kt)("a",{href:"#peer-interface-id"},"Peer Interface ID example"))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"peer_instance_id")),(0,l.kt)("td",null,(0,l.kt)("a",{href:"#peer-instance-id"},"Peer Instance ID example"))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"region")),(0,l.kt)("td",null,(0,l.kt)("a",{href:"#region"},"Region example"))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"resource_uuid")),(0,l.kt)("td",null,(0,l.kt)("a",{href:"#resource-uuid"},"Resource UUID example"))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"srcaddr")),(0,l.kt)("td",null,(0,l.kt)("a",{href:"#srcaddr"},"Source Address example"))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"srchostname")),(0,l.kt)("td",null,(0,l.kt)("a",{href:"#srchostname"},"Source Hostname example"))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"subnet_id")),(0,l.kt)("td",null,(0,l.kt)("a",{href:"#subnet-id"},"Subnet ID example"))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"traffic_category")),(0,l.kt)("td",null,(0,l.kt)("a",{href:"#traffic-category"},"Traffic Category example"))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"traffic_path")),(0,l.kt)("td",null,(0,l.kt)("a",{href:"#traffic-path"},"Traffic Path example"))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"vpc_id")),(0,l.kt)("td",null,(0,l.kt)("a",{href:"#vpc-id"},"VPC ID example"))))),(0,l.kt)("h3",{id:"keywords"},"Keywords"),(0,l.kt)("p",null,"VQL includes a set of keywords to create complex filter conditions. These keywords function similar to their SQL equivalents. Note that each expression started with ",(0,l.kt)("inlineCode",{parentName:"p"},"provider = 'aws'"),", followed by additional filters."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Keyword"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"VQL Sample"),(0,l.kt)("th",{parentName:"tr",align:null},"Explanation"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"AND")),(0,l.kt)("td",{parentName:"tr",align:null},"Logical AND operator"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"(network_flow_logs.account_id = '123456789012') AND (network_flow_logs.dsthostname = 'datadoghq.com')")),(0,l.kt)("td",{parentName:"tr",align:null},"This example filters for a specific account and destination hostname, where both conditions must be true.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"OR")),(0,l.kt)("td",{parentName:"tr",align:null},"Logical OR operator"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"(network_flow_logs.account_id = '123456789012') AND (network_flow_logs.dsthostname = 'datadoghq.com') OR (network_flow_logs.account_id = '09876543212') AND (network_flow_logs.dsthostname = 'github.com')")),(0,l.kt)("td",{parentName:"tr",align:null},"This example looks for results associated with two accounts and destination hostnames. At least one condition must be true.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"!=")),(0,l.kt)("td",{parentName:"tr",align:null},"Is not"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"(network_flow_logs.dsthostname != 'github.com')")),(0,l.kt)("td",{parentName:"tr",align:null},"This example looks for results that are any destination hostname type except for ",(0,l.kt)("inlineCode",{parentName:"td"},"github.com"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"IN")," and ",(0,l.kt)("inlineCode",{parentName:"td"},"NOT IN")),(0,l.kt)("td",{parentName:"tr",align:null},"Used to compare against an array/list"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"(network_flow_logs.peer_regions IN ('us-east-1','us-west-2'))")),(0,l.kt)("td",{parentName:"tr",align:null},"This example searches for results within a set of regions. ",(0,l.kt)("br",null),(0,l.kt)("br",null),"This same query also works for ",(0,l.kt)("inlineCode",{parentName:"td"},"NOT IN")," where the results are anything matching everything except for these regions: ",(0,l.kt)("inlineCode",{parentName:"td"},"(network_flow_logs.peer_regions NOT IN ('us-east-1','us-west-2'))"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"LIKE")," and ",(0,l.kt)("inlineCode",{parentName:"td"},"NOT LIKE")),(0,l.kt)("td",{parentName:"tr",align:null},"Performs string comparisons"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"(network_flow_logs.az_id LIKE '%use1%')")),(0,l.kt)("td",{parentName:"tr",align:null},"This example selects data where the Availability Zone contains ",(0,l.kt)("inlineCode",{parentName:"td"},"use1"),", such as ",(0,l.kt)("inlineCode",{parentName:"td"},"use1-az1"),". ",(0,l.kt)("br",null),(0,l.kt)("br",null),"This same query also works for ",(0,l.kt)("inlineCode",{parentName:"td"},"NOT LIKE")," where data does not contain a particular string: ",(0,l.kt)("inlineCode",{parentName:"td"},"(network_flow_logs.az_id NOT LIKE '%use1%')"),".")))),(0,l.kt)("p",null,"With these operators and keywords, you can construct complex filter conditions in VQL."),(0,l.kt)("h2",{id:"examples"},"VQL Examples"),(0,l.kt)("p",null,"The following examples cover common use cases for VQL."),(0,l.kt)("h3",{id:"account"},"Network Flows by Account ID"),(0,l.kt)("p",null,"Network flows from a set of account IDs."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"(network_flow_logs.account_id IN ('123456789012','098765432109'))\n")),(0,l.kt)("h3",{id:"az"},"Network Flows by Availability Zone ID"),(0,l.kt)("p",null,"Filter for a substring based on Availability Zone."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"(network_flow_logs.az_id LIKE '%use1%')\n")),(0,l.kt)("h3",{id:"dstaddr"},"Network Flows by Destination Address"),(0,l.kt)("p",null,"All network flows that do not match a particular destination adddress."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"(network_flow_logs.dstaddr != '1.123.456.7')\n")),(0,l.kt)("h3",{id:"dsthostname"},"Network Flows by Destination Hostname"),(0,l.kt)("p",null,"Network flows from a set of destination hostnames."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"(network_flow_logs.dsthostname IN ('datadoghq.com','github.com','sentry.io'))\n")),(0,l.kt)("h3",{id:"interface-id"},"Network Flows by Interface ID"),(0,l.kt)("p",null,"Network flows for a particular interface ID."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"(network_flow_logs.interface_id = 'eni-000012345a6789123')\n")),(0,l.kt)("h3",{id:"instance-id"},"Network Flows by Instance ID"),(0,l.kt)("p",null,"Network flows for a particular instance ID."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"(network_flow_logs.instance_id = 'i-0001a23b456c780c1')\n")),(0,l.kt)("h3",{id:"peer-resource-uuid"},"Network Flows by Peer Resource UUID"),(0,l.kt)("p",null,"Network flows for peer resource UUIDs matching a substring."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"(network_flow_logs.peer_resource_uuid LIKE '%arn:aws:ec2%')\n")),(0,l.kt)("h3",{id:"peer-account-id"},"Network Flows by Peer Account ID"),(0,l.kt)("p",null,"Network flows for anything that's not a particular peer account ID."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"(network_flow_logs.peer_account_id != '123456789012')\n")),(0,l.kt)("h3",{id:"peer-vpc-id"},"Network Flows by Peer VPC ID"),(0,l.kt)("p",null,"Network flows for two different peer VPC IDs."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"(network_flow_logs.peer_vpc_id IN ('vpc-12345678','vpc-0987654'))\n")),(0,l.kt)("h3",{id:"peer-regions"},"Network Flows by Peer Regions"),(0,l.kt)("p",null,"Network flows for anything outside a set of peer regions."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"(network_flow_logs.peer_regions NOT IN ('us-east-1','us-west-2'))\n")),(0,l.kt)("h3",{id:"peer-az-id"},"Network Flows by Peer AZ ID"),(0,l.kt)("p",null,"Network flows for a specific peer AZ."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"(network_flow_logs.peer_az_id = 'use1-az1')\n")),(0,l.kt)("h3",{id:"peer-subnet-id"},"Network Flows by Peer Subnet ID"),(0,l.kt)("p",null,"Network flows for any peer subnet IDs that do not contain a substring."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"(network_flow_logs.peer_subnet_id NOT LIKE '%subnet-022%')\n")),(0,l.kt)("h3",{id:"peer-interface-id"},"Network Flows by Peer Interface ID"),(0,l.kt)("p",null,"Network flows based on a peer interface ID substring."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"(network_flow_logs.peer_interface_id LIKE 'eni-0a1b2c3d%')\n")),(0,l.kt)("h3",{id:"peer-instance-id"},"Network Flows by Peer Instance ID"),(0,l.kt)("p",null,"Network flows excluding a particular peer instance ID."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"(network_flow_logs.peer_instance_id != 'i-0a1b2c3d4e5f67890')\n")),(0,l.kt)("h3",{id:"region"},"Network Flows by Region"),(0,l.kt)("p",null,"Network flows in multiple regions."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"(network_flow_logs.region IN ('us-east-1', 'us-west-2', 'eu-central-1'))\n")),(0,l.kt)("h3",{id:"resource-uuid"},"Network Flows by Resource UUID"),(0,l.kt)("p",null,"Network flows for resources not matching a specific UUID substring."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"(network_flow_logs.resource_uuid NOT LIKE '123e4567%')\n")),(0,l.kt)("h3",{id:"srcaddr"},"Network Flows by Source Address"),(0,l.kt)("p",null,"Network flows from a set of source addresses."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"(network_flow_logs.srcaddr IN ('192.168.1.1', '10.0.0.5', '172.16.0.10'))\n")),(0,l.kt)("h3",{id:"srchostname"},"Network Flows by Source Hostname"),(0,l.kt)("p",null,"Network flows excluding specific source hostnames."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"(network_flow_logs.srchostname NOT IN ('example.com', 'internal.service.local'))\n")),(0,l.kt)("h3",{id:"subnet-id"},"Network Flows by Subnet ID"),(0,l.kt)("p",null,"Network flows for subnets with a specific prefix."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"(network_flow_logs.subnet_id LIKE 'subnet-0a1b%')\n")),(0,l.kt)("h3",{id:"traffic-category"},"Network Flows by Traffic Category"),(0,l.kt)("p",null,"Only cross-region traffic."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"(network_flow_logs.traffic_category = 'cross-region')\n")),(0,l.kt)("h3",{id:"traffic-path"},"Network Flows by Traffic Path"),(0,l.kt)("p",null,"Network flows for Inter-Region VPC Peering. Traffic paths have a specific key, as described below."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Traffic Path"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"In VPC")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"Internet Gateway or Gateway VPC Endpoint")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"Virtual Private Gateway")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"Intra-Region VPC Peering")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"Inter-Region VPC Peering")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"6"),(0,l.kt)("td",{parentName:"tr",align:null},"Local Gateway")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"7"),(0,l.kt)("td",{parentName:"tr",align:null},"Gateway VPC Endpoint (Nitro-based instances)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"8"),(0,l.kt)("td",{parentName:"tr",align:null},"Internet Gateway (Nitro-based instances)")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"(network_flow_logs.traffic_path = '5')\n")),(0,l.kt)("h3",{id:"vpc-id"},"Network Flows by VPC ID"),(0,l.kt)("p",null,"Everything except for a specific VPC."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"(network_flow_logs.vpc_id != 'vpc-12c12345a12345678')\n")),(0,l.kt)("h3",{id:"multiple-filters"},"Multiple Filters"),(0,l.kt)("p",null,"Complex filter that shows combining two different statements using ",(0,l.kt)("inlineCode",{parentName:"p"},"OR")," with multiple criteria."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"(network_flow_logs.dsthostname = 'datadoghq.com') AND (network_flow_logs.account_id = '1234354678901') OR (network_flow_logs.dsthostname = 'github.com') AND (network_flow_logs.account_id = '90876543211')\n")))}p.isMDXComponent=!0}}]);